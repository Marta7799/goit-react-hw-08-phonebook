{"version":3,"file":"static/js/358.2fc51e76.chunk.js","mappings":"oPAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAM,EAE/CC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,OAAOA,MAAO,EAE5CC,EAAkB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,SAAU,ECHjE,EAAuB,0BAAvB,EAA4D,8BAA5D,EAAuG,gCAAvG,EAAmJ,+BAAnJ,EAA4L,6B,SCM/KC,EAAc,WACzB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBG,GAAWC,EAAAA,EAAAA,MACXjB,GAAQkB,EAAAA,EAAAA,IAAYrB,GAwB1B,OACEsB,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAUC,SAbJ,SAAAC,GACvBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,eAEoD,KADhDC,EAAAA,EAAAA,GAAO3B,GACR4B,WAAU,SAAAC,GAAO,OAAInB,IAASmB,EAAQnB,IAAI,IAC1DoB,MAAM,GAADC,OAAIrB,EAAI,6BAEbM,GAASgB,EAAAA,EAAAA,IAAW,CAAEtB,KAAAA,EAAMI,OAAAA,KAE9BW,EAAKQ,OACP,EAGwDC,SAAA,EACpDf,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAca,SAAA,CAAC,QAE/BC,EAAAA,EAAAA,KAAA,SACEf,UAAWC,EACXe,KAAK,OACL1B,KAAK,OACL2B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,YAAY,aACZC,MAAO/B,EACPgC,SAnCiB,SAAAnB,GACvB,IAAQkB,EAAUlB,EAAEoB,OAAZF,MACR9B,EAAQ8B,EACV,QAmCItB,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAca,SAAA,CAAC,UAE/BC,EAAAA,EAAAA,KAAA,SACEf,UAAWC,EACXe,KAAK,MACL1B,KAAK,SACL2B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,YAAY,qBACZC,MAAO3B,EACP4B,SA5CmB,SAAAnB,GACzB,IAAQkB,EAAUlB,EAAEoB,OAAZF,MACR1B,EAAU0B,EACZ,QA4CIN,EAAAA,EAAAA,KAAA,UAAQf,UAAWC,EAAae,KAAK,SAAQF,SAAC,kBAKpD,ECrEA,GAAgB,mBAAqB,yCCcxBU,EAAc,WACzB,IAEMC,EAbmB,SAAC9C,EAAUG,GACpC,OAAKA,EAGIH,EAASG,QAAO,SAAA2B,GACrB,OAAOA,EAAQnB,KAAKoC,cAAcC,SAAS7C,EAAO4C,cACpD,IAJO/C,CAMX,CAK0BiD,EAFP9B,EAAAA,EAAAA,IAAYrB,IACdqB,EAAAA,EAAAA,IAAYjB,IAGrBe,GAAWC,EAAAA,EAAAA,MAGjB,OACEkB,EAAAA,EAAAA,KAAA,OAAKf,UAAWC,EAAAA,kBAAsBa,UACpCC,EAAAA,EAAAA,KAAA,MAAIf,UAAWC,EAAAA,YAAgBa,SAC5BW,EAAgBI,KAAI,SAACpB,EAASqB,GAAE,OAC/B/B,EAAAA,EAAAA,MAAA,MAAaC,UAAWC,EAAAA,gBAAoBa,SAAA,CACzCL,EAAQnB,KAAK,KAAGmB,EAAQf,QACzBqB,EAAAA,EAAAA,KAAA,UACEC,KAAK,SACLhB,UAAWC,EAAAA,mBACX8B,QAAS,kBAXA,SAAAD,GAAE,OAAIlC,GAASoC,EAAAA,EAAAA,IAAWF,GAAK,CAWzBG,CAAaxB,EAAQqB,GAAG,EAAChB,SACzC,aANMgB,EASJ,OAKf,E,UCxCA,GAAgB,WAAa,4BCIhBI,EAAS,WACpB,IAAMtC,GAAWC,EAAAA,EAAAA,MACXf,GAASgB,EAAAA,EAAAA,IAAYjB,GAM3B,OACEkB,EAAAA,EAAAA,MAAA,OAAAe,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOf,UAAWC,EAAAA,YAAgBa,SAAC,4BACnCC,EAAAA,EAAAA,KAAA,SACEf,UAAWC,EAAAA,WACXe,KAAK,OACL1B,KAAK,SACL8B,YAAY,eACZC,MAAOvC,EACPwC,SAbe,SAAAnB,GACnBP,GAASuC,EAAAA,EAAAA,GAAUhC,EAAEoB,OAAOF,OAC9B,MAeF,ECjBe,SAASe,IACtB,IAAMxC,GAAWC,EAAAA,EAAAA,MACXb,GAAYc,EAAAA,EAAAA,IAAYf,GAM9B,OAJAsD,EAAAA,EAAAA,YAAU,WACRzC,GAAS0C,EAAAA,EAAAA,MACX,GAAG,CAAC1C,KAGFG,EAAAA,EAAAA,MAAAwC,EAAAA,SAAA,CAAAzB,SAAA,EACEC,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,CAAA1B,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,iBAETC,EAAAA,EAAAA,KAAC9B,EAAW,KACZ8B,EAAAA,EAAAA,KAAA,OAAAD,SAAM9B,GAAa,4BACnB+B,EAAAA,EAAAA,KAACmB,EAAM,KACPnB,EAAAA,EAAAA,KAACS,EAAW,MAGlB,C","sources":["redux/contacts/selectors.jsx","webpack://react-homework-template/./src/components/contactForm/contactForm.module.css?5312","components/contactForm/contactForm.jsx","webpack://react-homework-template/./src/components/contactList/contactList.module.css?e2f8","components/contactList/contactList.jsx","webpack://react-homework-template/./src/components/filter/filter.module.css?56b3","components/filter/filter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"contactForm_form__kCEi4\",\"formName\":\"contactForm_formName__-Cizm\",\"formNumber\":\"contactForm_formNumber__roPLh\",\"formLabel\":\"contactForm_formLabel__a8pPd\",\"formBtn\":\"contactForm_formBtn__GrdG3\"};","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport css from './contactForm.module.css';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const items = useSelector(selectContacts);\n\n  const handleChangeName = e => {\n    const { value } = e.target;\n    setName(value);\n  };\n\n  const handleChangeNumber = e => {\n    const { value } = e.target;\n    setNumber(value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const contactsLists = [...items];\n    if (contactsLists.findIndex(contact => name === contact.name) !== -1) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleFormSubmit}>\n      <label className={css.formLabel}>\n        Name\n        <input\n          className={css.formName}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChangeName}\n        />\n      </label>\n      <label className={css.formLabel}>\n        Number\n        <input\n          className={css.formNumber}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter phone number\"\n          value={number}\n          onChange={handleChangeNumber}\n        />\n      </label>\n      <button className={css.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactListItemBtn\":\"contactList_contactListItemBtn__eoBuP\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from '../../redux/contacts/selectors';\nimport { delContact } from '../../redux/contacts/operations';\nimport css from './contactList.module.css';\n\nconst getVisibleContacts = (contacts, filter) => {\n  if (!filter) {\n    return contacts;\n  } else {\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  }\n};\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const visibleContacts = getVisibleContacts(contacts, filter);\n\n  const dispatch = useDispatch();\n  const handleDelete = id => dispatch(delContact(id));\n\n  return (\n    <div className={css.wraperContactList}>\n      <ul className={css.contactList}>\n        {visibleContacts.map((contact, id) => (\n          <li key={id} className={css.contactListItem}>\n            {contact.name}: {contact.number}\n            <button\n              type=\"button\"\n              className={css.contactListItemBtn}\n              onClick={() => handleDelete(contact.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterName\":\"filter_filterName__P+hRg\"};","import { setFilter } from '../../redux/contacts/filterSlice';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from './filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <div>\n      <label className={css.filterLabel}>Find contacts by Name </label>\n      <input\n        className={css.filterName}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter filter\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactForm } from 'components/contactForm/contactForm';\nimport { selectIsLoading } from '../redux/contacts/selectors';\nimport { ContactList } from 'components/contactList/contactList';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { Filter } from 'components/filter/filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Phonebook</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","ContactForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","useSelector","_jsxs","className","css","onSubmit","e","preventDefault","form","currentTarget","_toConsumableArray","findIndex","contact","alert","concat","addContact","reset","children","_jsx","type","pattern","title","required","placeholder","value","onChange","target","ContactList","visibleContacts","toLowerCase","includes","getVisibleContacts","map","id","onClick","delContact","handleDelete","Filter","setFilter","Contacts","useEffect","fetchContacts","_Fragment","Helmet"],"sourceRoot":""}